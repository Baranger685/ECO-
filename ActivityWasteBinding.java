// Generated by view binder compiler. Do not edit!
package com.s22010198.eco.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.s22010198.eco.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityWasteBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView Shake;

  @NonNull
  public final MaterialButton btnAddPoints;

  @NonNull
  public final Button btnLeaderboard;

  @NonNull
  public final CardView cardButtons;

  @NonNull
  public final CardView cardPoints;

  @NonNull
  public final CardView cardWeeklyChallenges;

  @NonNull
  public final CardView cardWeeklyGoal;

  @NonNull
  public final ImageView ivGoalCompletion;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final TextView tvChallenge1;

  @NonNull
  public final TextView tvChallenge2;

  @NonNull
  public final TextView tvChallenge3;

  @NonNull
  public final TextView tvChallenge4;

  @NonNull
  public final TextView tvCongratulations;

  @NonNull
  public final TextView tvPoints;

  @NonNull
  public final TextView tvWeeklyChallenges;

  @NonNull
  public final TextView tvWeeklyGoal;

  private ActivityWasteBinding(@NonNull ConstraintLayout rootView, @NonNull TextView Shake,
      @NonNull MaterialButton btnAddPoints, @NonNull Button btnLeaderboard,
      @NonNull CardView cardButtons, @NonNull CardView cardPoints,
      @NonNull CardView cardWeeklyChallenges, @NonNull CardView cardWeeklyGoal,
      @NonNull ImageView ivGoalCompletion, @NonNull ProgressBar progressBar,
      @NonNull RecyclerView recyclerView, @NonNull TextView tvChallenge1,
      @NonNull TextView tvChallenge2, @NonNull TextView tvChallenge3,
      @NonNull TextView tvChallenge4, @NonNull TextView tvCongratulations,
      @NonNull TextView tvPoints, @NonNull TextView tvWeeklyChallenges,
      @NonNull TextView tvWeeklyGoal) {
    this.rootView = rootView;
    this.Shake = Shake;
    this.btnAddPoints = btnAddPoints;
    this.btnLeaderboard = btnLeaderboard;
    this.cardButtons = cardButtons;
    this.cardPoints = cardPoints;
    this.cardWeeklyChallenges = cardWeeklyChallenges;
    this.cardWeeklyGoal = cardWeeklyGoal;
    this.ivGoalCompletion = ivGoalCompletion;
    this.progressBar = progressBar;
    this.recyclerView = recyclerView;
    this.tvChallenge1 = tvChallenge1;
    this.tvChallenge2 = tvChallenge2;
    this.tvChallenge3 = tvChallenge3;
    this.tvChallenge4 = tvChallenge4;
    this.tvCongratulations = tvCongratulations;
    this.tvPoints = tvPoints;
    this.tvWeeklyChallenges = tvWeeklyChallenges;
    this.tvWeeklyGoal = tvWeeklyGoal;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityWasteBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityWasteBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_waste, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityWasteBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Shake;
      TextView Shake = ViewBindings.findChildViewById(rootView, id);
      if (Shake == null) {
        break missingId;
      }

      id = R.id.btnAddPoints;
      MaterialButton btnAddPoints = ViewBindings.findChildViewById(rootView, id);
      if (btnAddPoints == null) {
        break missingId;
      }

      id = R.id.btnLeaderboard;
      Button btnLeaderboard = ViewBindings.findChildViewById(rootView, id);
      if (btnLeaderboard == null) {
        break missingId;
      }

      id = R.id.cardButtons;
      CardView cardButtons = ViewBindings.findChildViewById(rootView, id);
      if (cardButtons == null) {
        break missingId;
      }

      id = R.id.cardPoints;
      CardView cardPoints = ViewBindings.findChildViewById(rootView, id);
      if (cardPoints == null) {
        break missingId;
      }

      id = R.id.cardWeeklyChallenges;
      CardView cardWeeklyChallenges = ViewBindings.findChildViewById(rootView, id);
      if (cardWeeklyChallenges == null) {
        break missingId;
      }

      id = R.id.cardWeeklyGoal;
      CardView cardWeeklyGoal = ViewBindings.findChildViewById(rootView, id);
      if (cardWeeklyGoal == null) {
        break missingId;
      }

      id = R.id.ivGoalCompletion;
      ImageView ivGoalCompletion = ViewBindings.findChildViewById(rootView, id);
      if (ivGoalCompletion == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.recyclerView;
      RecyclerView recyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.tvChallenge1;
      TextView tvChallenge1 = ViewBindings.findChildViewById(rootView, id);
      if (tvChallenge1 == null) {
        break missingId;
      }

      id = R.id.tvChallenge2;
      TextView tvChallenge2 = ViewBindings.findChildViewById(rootView, id);
      if (tvChallenge2 == null) {
        break missingId;
      }

      id = R.id.tvChallenge3;
      TextView tvChallenge3 = ViewBindings.findChildViewById(rootView, id);
      if (tvChallenge3 == null) {
        break missingId;
      }

      id = R.id.tvChallenge4;
      TextView tvChallenge4 = ViewBindings.findChildViewById(rootView, id);
      if (tvChallenge4 == null) {
        break missingId;
      }

      id = R.id.tvCongratulations;
      TextView tvCongratulations = ViewBindings.findChildViewById(rootView, id);
      if (tvCongratulations == null) {
        break missingId;
      }

      id = R.id.tvPoints;
      TextView tvPoints = ViewBindings.findChildViewById(rootView, id);
      if (tvPoints == null) {
        break missingId;
      }

      id = R.id.tvWeeklyChallenges;
      TextView tvWeeklyChallenges = ViewBindings.findChildViewById(rootView, id);
      if (tvWeeklyChallenges == null) {
        break missingId;
      }

      id = R.id.tvWeeklyGoal;
      TextView tvWeeklyGoal = ViewBindings.findChildViewById(rootView, id);
      if (tvWeeklyGoal == null) {
        break missingId;
      }

      return new ActivityWasteBinding((ConstraintLayout) rootView, Shake, btnAddPoints,
          btnLeaderboard, cardButtons, cardPoints, cardWeeklyChallenges, cardWeeklyGoal,
          ivGoalCompletion, progressBar, recyclerView, tvChallenge1, tvChallenge2, tvChallenge3,
          tvChallenge4, tvCongratulations, tvPoints, tvWeeklyChallenges, tvWeeklyGoal);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
